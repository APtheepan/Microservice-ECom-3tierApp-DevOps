name: "Continuous Integration rating CI"

on:
 push:
    branches:
     - main
    paths-ignore:
     - 'README.md'
     - 'helm/**'
env:
    AWS_REGION: ${{ vars.AWS_REGION }}
    AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
    AWS_ECR_REPO_NAME: ${{ vars.AWS_ECR_REPO_RATING }}
    REPOSITORY_URI: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/
    GITHUB_REPO: Microservice-ECom-3tierApp-DevOps
    GITHUB_USER: APtheepan
    GITHUB_TOKEN: ${{ secrets.TOKEN }}

jobs:
  
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4' # Specify PHP version, change as needed
        extensions: mbstring, intl, dom, pdo_mysql, opcache, zip # Add necessary extensions
        ini-values: post_max_size=256M, max_execution_time=300

    - name: Install dependencies with Composer
      working-directory: ratings
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Run tests
      working-directory: ratings
      run: phpunit --configuration phpunit.xml

    - name: Lint PHP code
      working-directory: ratings
      run: ./vendor/bin/phpcs --standard=PSR12 ratings/html/src/ # Example, add path accordingly

    - name: Run security check
      working-directory: ratings
      run: ./vendor/bin/phpstan analyse ratings/html/src/ --level=max # Optional for security checks


  
  docker-image-build_ECR-image-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build docker image
      working-directory: ratings
      run: |
          docker build -t ${{env.AWS_ECR_REPO_NAME}} -f Dockerfile .

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      run: aws ecr get-login-password --region ${{env.AWS_REGION}} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com
    - name: Push image to Amazon ECR
      run: docker tag ${{env.AWS_ECR_REPO_NAME}} ${{env.REPOSITORY_URI}}${{env.AWS_ECR_REPO_NAME}}:${{github.run_id}}
    - name: Push image to Amazon ECR
      run: docker push ${{env.REPOSITORY_URI}}${{env.AWS_ECR_REPO_NAME}}:${{github.run_id}}
